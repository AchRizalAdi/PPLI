{"remainingRequest":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengumumanSection.vue?vue&type=template&id=09444be8","dependencies":[{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengumumanSection.vue","mtime":1660631030975},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660643185437},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1660643185418},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\babel-loader\\lib\\index.js","mtime":1660643187247},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1660643188787},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660643185437},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1660643187621}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}