{"remainingRequest":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengumumanSection.vue?vue&type=template&id=3a141062","dependencies":[{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengumumanSection.vue","mtime":1660122797886},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657682274000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1657682290000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\babel-loader\\lib\\index.js","mtime":1657682274000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1657682290000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657682274000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1657682290000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}