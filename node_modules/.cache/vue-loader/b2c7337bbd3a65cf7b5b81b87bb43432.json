{"remainingRequest":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\AuthorSection.vue?vue&type=template&id=a32ee4a2&scoped=true","dependencies":[{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\AuthorSection.vue","mtime":1658153340000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657682274000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1657682290000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\babel-loader\\lib\\index.js","mtime":1657682274000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1657682290000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1657682274000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1657682290000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQo8c2VjdGlvbiBjbGFzcz0iYXV0aG9yLXNlY3Rpb24gc2VjdGlvbi1zcGFjZSI+DQogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14bC0zIj4NCiAgICAgICAgICAgICAgICA8QXV0aG9yU2lkZWJhcg0KICAgICAgICAgICAgICAgIDpjb250ZW50PSJTZWN0aW9uRGF0YS5hdXRob3JTaWRlYmFyRGF0YS5zaWRlYmFyV2lkZ2V0LmNvbnRlbnQiDQogICAgICAgICAgICAgICAgOmZvbGxvd2luZ251bT0iU2VjdGlvbkRhdGEuYXV0aG9yU2lkZWJhckRhdGEuc2lkZWJhcldpZGdldC5mb2xsb3dpbmdOdW0iDQogICAgICAgICAgICAgICAgOmZvbGxvd2luZ3RleHQ9IlNlY3Rpb25EYXRhLmF1dGhvclNpZGViYXJEYXRhLnNpZGViYXJXaWRnZXQuZm9sbG93aW5nVGV4dCINCiAgICAgICAgICAgICAgICA6Zm9sbG93ZXJudW09IlNlY3Rpb25EYXRhLmF1dGhvclNpZGViYXJEYXRhLnNpZGViYXJXaWRnZXQuZm9sbG93ZXJOdW0iDQogICAgICAgICAgICAgICAgOmZvbGxvd2VydGV4dD0iU2VjdGlvbkRhdGEuYXV0aG9yU2lkZWJhckRhdGEuc2lkZWJhcldpZGdldC5mb2xsb3dlclRleHQiDQogICAgICAgICAgICAgICAgOmF2YXRhcnM9IlNlY3Rpb25EYXRhLmF1dGhvclNpZGViYXJEYXRhLnNpZGViYXJXaWRnZXQuZm9sbG93ZXJzQXZhdGFyIg0KICAgICAgICAgICAgICAgIDpsaW5rcz0iU2VjdGlvbkRhdGEuYXV0aG9yU2lkZWJhckRhdGEuc2lkZWJhcldpZGdldFR3by5saW5rcyINCiAgICAgICAgICAgICAgICA6ZGF0ZXRleHQ9IlNlY3Rpb25EYXRhLmF1dGhvclNpZGViYXJEYXRhLnNpZGViYXJXaWRnZXRUaHJlZS5kYXRlIg0KICAgICAgICAgICAgICAgID48L0F1dGhvclNpZGViYXI+DQogICAgICAgICAgICA8L2Rpdj48IS0tIGVuZCBjb2wgLS0+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteGwtOSBwcy14bC00Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhdXRob3ItaXRlbXMtd3JhcCI+DQogICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdi10YWJzIG5hdi10YWJzLXMxIiBpZD0ibXlUYWIiIHJvbGU9InRhYmxpc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSIgcm9sZT0icHJlc2VudGF0aW9uIiB2LWZvcj0ibGlzdCBpbiBTZWN0aW9uRGF0YS5hdXRob3JTaWRlYmFyRGF0YS5hdXRob3JUYWJOYXYiIDprZXk9Imxpc3QuaWQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Im5hdi1saW5rIiA6Y2xhc3M9Imxpc3QuaXNBY3RpdmUiIDppZD0ibGlzdC5zbHVnIiBkYXRhLWJzLXRvZ2dsZT0idGFiIiA6ZGF0YS1icy10YXJnZXQ9Imxpc3QuYnNUYXJnZXQiIHR5cGU9ImJ1dHRvbiI+e3sgbGlzdC50aXRsZSB9fTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2FwLTJ4Ij48L2Rpdj48IS0tIGVuZCBnYXAtMnggLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1jb250ZW50IiBpZD0ibXlUYWJDb250ZW50Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1wYW5lIGZhZGUgc2hvdyBhY3RpdmUiIGlkPSJvbi1zYWxlIiByb2xlPSJ0YWJwYW5lbCIgYXJpYS1sYWJlbGxlZGJ5PSJvbi1zYWxlLXRhYiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGctZ3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCIgdi1mb3I9InByb2R1Y3QgaW4gU2VjdGlvbkRhdGEucHJvZHVjdERhdGEub25TYWxlTGlzdCIgOmtleT0icHJvZHVjdC5pZCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIGNhcmQtZnVsbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1pbWFnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icHJvZHVjdC5pbWciIGNsYXNzPSJjYXJkLWltZy10b3AiIGFsdD0iYXJ0IGltYWdlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkgcC00Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIHRleHQtdHJ1bmNhdGUgbWItMCI+e3sgcHJvZHVjdC50aXRsZSB9fTwvaDU+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYXV0aG9yIG1iLTEgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWUtMSBjYXJkLWF1dGhvci1ieSI+Qnk8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjdXN0b20tdG9vbHRpcC13cmFwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsgOnRvPSJwcm9kdWN0LmF1dGhvckxpbmsiIGNsYXNzPSJhdXRob3ItbGluayI+e3sgcHJvZHVjdC5hdXRob3IgfX08L3JvdXRlci1saW5rPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY3VzdG9tLXRvb2x0aXAtd3JhcCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY2FyZC1hdXRob3IgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtcHJpY2Utd3JhcCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1zbS1iZXR3ZWVuIG1iLTMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWUtNSBtZS1zbS0yIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZC1wcmljZS10aXRsZSI+UHJpY2U8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmQtcHJpY2UtbnVtYmVyIj4mZG9sbGFyO3t7IHByb2R1Y3QucHJpY2UgfX08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtc20tZW5kIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZC1wcmljZS10aXRsZSI+Q3VycmVudCBiaWQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmQtcHJpY2UtbnVtYmVyIj57eyBwcm9kdWN0LnByaWNlVHdvIH19IEVUSDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIGVuZCBjYXJkLXByaWNlLXdyYXAgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4gYnRuLXNtIGJ0bi1kYXJrIj5QbGFjZSBCaWQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY2FyZC1ib2R5IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyb3V0ZXItbGluaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZGV0YWlscyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnRvPSJ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnUHJvZHVjdERldGFpbCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBwcm9kdWN0LmlkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHByb2R1Y3QudGl0bGUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhVGV4dDogcHJvZHVjdC5tZXRhVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlOiBwcm9kdWN0LnByaWNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpY2VUd286IHByb2R1Y3QucHJpY2VUd28sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWdMZzogcHJvZHVjdC5pbWdMZywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFUZXh0OiBwcm9kdWN0Lm1ldGFUZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YVRleHRUd286IHByb2R1Y3QubWV0YVRleHRUd28sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhVGV4dFRocmVlOiBwcm9kdWN0Lm1ldGFUZXh0VGhyZWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBwcm9kdWN0LmNvbnRlbnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0iDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcm91dGVyLWxpbms+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIGVuZCBjYXJkIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIGVuZCBjb2wgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSByb3cgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48IS0tIGVuZCB0YWItcGFuZSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYi1wYW5lIGZhZGUiIGlkPSJvd25lZCIgcm9sZT0idGFicGFuZWwiIGFyaWEtbGFiZWxsZWRieT0ib3duZWQtdGFiIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZy1ncyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IiB2LWZvcj0icHJvZHVjdCBpbiBTZWN0aW9uRGF0YS5wcm9kdWN0RGF0YS5vd25lZExpc3QiIDprZXk9InByb2R1Y3QuaWQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBjYXJkLWZ1bGwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaW1hZ2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InByb2R1Y3QuaW1nIiBjbGFzcz0iY2FyZC1pbWctdG9wIiBhbHQ9ImFydCBpbWFnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5IHAtNCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC10aXRsZSB0ZXh0LXRydW5jYXRlIG1iLTAiPnt7IHByb2R1Y3QudGl0bGUgfX08L2g1Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWF1dGhvciBtYi0xIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1lLTEgY2FyZC1hdXRob3ItYnkiPkJ5PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLXRvb2x0aXAtd3JhcCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIDp0bz0icHJvZHVjdC5hdXRob3JMaW5rIiBjbGFzcz0iYXV0aG9yLWxpbmsiPnt7IHByb2R1Y3QuYXV0aG9yIH19PC9yb3V0ZXItbGluaz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIGN1c3RvbS10b29sdGlwLXdyYXAgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIGNhcmQtYXV0aG9yIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXByaWNlLXdyYXAgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtc20tYmV0d2VlbiBtYi0zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lLTUgbWUtc20tMiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmQtcHJpY2UtdGl0bGUiPlByaWNlPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJkLXByaWNlLW51bWJlciI+JmRvbGxhcjt7eyBwcm9kdWN0LnByaWNlIH19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXNtLWVuZCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmQtcHJpY2UtdGl0bGUiPkN1cnJlbnQgYmlkPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJkLXByaWNlLW51bWJlciI+e3sgcHJvZHVjdC5wcmljZVR3byB9fSBFVEg8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY2FyZC1wcmljZS13cmFwIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tZGFyayI+UGxhY2UgQmlkPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIGNhcmQtYm9keSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImRldGFpbHMiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp0bz0iew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1Byb2R1Y3REZXRhaWwnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogcHJvZHVjdC5pZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBwcm9kdWN0LnRpdGxlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YVRleHQ6IHByb2R1Y3QubWV0YVRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmljZTogcHJvZHVjdC5wcmljZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlVHdvOiBwcm9kdWN0LnByaWNlVHdvLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nTGc6IHByb2R1Y3QuaW1nTGcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhVGV4dDogcHJvZHVjdC5tZXRhVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFUZXh0VHdvOiBwcm9kdWN0Lm1ldGFUZXh0VHdvLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YVRleHRUaHJlZTogcHJvZHVjdC5tZXRhVGV4dFRocmVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogcHJvZHVjdC5jb250ZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY2FyZCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY29sIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gcm93IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgdGFiLXBhbmUgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWItcGFuZSBmYWRlIiBpZD0iY3JlYXRlZCIgcm9sZT0idGFicGFuZWwiIGFyaWEtbGFiZWxsZWRieT0iY3JlYXRlZC10YWIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBnLWdzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiIHYtZm9yPSJwcm9kdWN0IGluIFNlY3Rpb25EYXRhLnByb2R1Y3REYXRhLm9uU2FsZUxpc3QiIDprZXk9InByb2R1Y3QuaWQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBjYXJkLWZ1bGwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaW1hZ2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InByb2R1Y3QuaW1nIiBjbGFzcz0iY2FyZC1pbWctdG9wIiBhbHQ9ImFydCBpbWFnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5IHAtNCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC10aXRsZSB0ZXh0LXRydW5jYXRlIG1iLTAiPnt7IHByb2R1Y3QudGl0bGUgfX08L2g1Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWF1dGhvciBtYi0xIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1lLTEgY2FyZC1hdXRob3ItYnkiPkJ5PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLXRvb2x0aXAtd3JhcCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJvdXRlci1saW5rIDp0bz0icHJvZHVjdC5hdXRob3JMaW5rIiBjbGFzcz0iYXV0aG9yLWxpbmsiPnt7IHByb2R1Y3QuYXV0aG9yIH19PC9yb3V0ZXItbGluaz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIGN1c3RvbS10b29sdGlwLXdyYXAgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIGNhcmQtYXV0aG9yIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLXByaWNlLXdyYXAgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtc20tYmV0d2VlbiBtYi0zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lLTUgbWUtc20tMiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmQtcHJpY2UtdGl0bGUiPlByaWNlPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJkLXByaWNlLW51bWJlciI+JmRvbGxhcjt7eyBwcm9kdWN0LnByaWNlIH19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXNtLWVuZCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmQtcHJpY2UtdGl0bGUiPkN1cnJlbnQgYmlkPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYXJkLXByaWNlLW51bWJlciI+e3sgcHJvZHVjdC5wcmljZVR3byB9fSBFVEg8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY2FyZC1wcmljZS13cmFwIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tZGFyayI+UGxhY2UgQmlkPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIGNhcmQtYm9keSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cm91dGVyLWxpbmsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImRldGFpbHMiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp0bz0iew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1Byb2R1Y3REZXRhaWwnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogcHJvZHVjdC5pZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBwcm9kdWN0LnRpdGxlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YVRleHQ6IHByb2R1Y3QubWV0YVRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmljZTogcHJvZHVjdC5wcmljZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlVHdvOiBwcm9kdWN0LnByaWNlVHdvLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1nTGc6IHByb2R1Y3QuaW1nTGcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRhVGV4dDogcHJvZHVjdC5tZXRhVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFUZXh0VHdvOiBwcm9kdWN0Lm1ldGFUZXh0VHdvLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YVRleHRUaHJlZTogcHJvZHVjdC5tZXRhVGV4dFRocmVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogcHJvZHVjdC5jb250ZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3JvdXRlci1saW5rPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY2FyZCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY29sIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gcm93IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgdGFiLXBhbmUgLS0+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIHRhYi1jb250ZW50IC0tPg0KICAgICAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIGF1dGhvci1pdGVtcy13cmFwIC0tPg0KICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgY29sIC0tPg0KICAgICAgICA8L2Rpdj48IS0tIGVuZCByb3cgLS0+DQogICAgPC9kaXY+PCEtLSAuY29udGFpbmVyIC0tPg0KICAgICAgICA8IS0tIE1vZGFsIC0tPg0KICAgIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJyZXBvcnRNb2RhbCIgdGFiaW5kZXg9Ii0xIiBhcmlhLWxhYmVsbGVkYnk9InJlcG9ydE1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWRpYWxvZy1jZW50ZXJlZCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0icmVwb3J0TW9kYWxMYWJlbCI+e3tTZWN0aW9uRGF0YS5yZXBvcnRNb2RhbERhdGEudGl0bGUgfX08L2g0Pg0KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0bi1jbG9zZSBpY29uLWJ0biIgZGF0YS1icy1kaXNtaXNzPSJtb2RhbCIgYXJpYS1sYWJlbD0iQ2xvc2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGVtIGNsYXNzPSJuaSBuaS1jcm9zcyI+PC9lbT4NCiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+DQogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtb2RhbC10ZXh0IG1iLTIiIHYtaHRtbD0iU2VjdGlvbkRhdGEucmVwb3J0TW9kYWxEYXRhLmNvbnRlbnQiPjwvcD4NCiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1vZGFsLXRleHQgbWItMyIgdi1odG1sPSJTZWN0aW9uRGF0YS5yZXBvcnRNb2RhbERhdGEuY29udGVudFR3byI+PC9wPg0KICAgICAgICAgICAgICAgICAgICA8Zm9ybSBhY3Rpb249IiMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1zMSBtYi0zIiBwbGFjZWhvbGRlcj0iRW50ZXIgeW91ciBlbWFpbCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgbmFtZT0ibWVzc2FnZSIgcm93cz0iNiIgY2xhc3M9ImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtczEgbWItMyIgOnBsYWNlaG9sZGVyPSJTZWN0aW9uRGF0YS5yZXBvcnRNb2RhbERhdGEucGxhY2Vob2xkZXJUZXh0Ij48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1kYXJrIHctMTAwIiB0eXBlPSJzdWJtaXQiPnt7U2VjdGlvbkRhdGEucmVwb3J0TW9kYWxEYXRhLmJ0blRleHR9fTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+DQogICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgbW9kYWwtYm9keSAtLT4NCiAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIG1vZGFsLWNvbnRlbnQgLS0+DQogICAgICAgIDwvZGl2PjwhLS0gZW5kIG1vZGFsLWRpYWxvZyAtLT4NCiAgICA8L2Rpdj48IS0tIGVuZCBtb2RhbC0tPg0KICAgIDwhLS0gTW9kYWwgLS0+DQo8L3NlY3Rpb24+PCEtLSBlbmQgYXV0aG9yLXNlY3Rpb24gLS0+DQo="},null]}