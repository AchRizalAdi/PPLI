{"remainingRequest":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\babel-loader\\lib\\index.js!E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengurusSectionSlider.vue?vue&type=template&id=2a861ac5&scoped=true","dependencies":[{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengurusSectionSlider.vue","mtime":1657682294000},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\babel.config.js","mtime":1660555071787},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660643185437},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1660643185418},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\babel-loader\\lib\\index.js","mtime":1660643187247},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1660643188787},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660643185437},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1660643187621}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKY29uc3QgX3dpdGhTY29wZUlkID0gbiA9PiAoX3B1c2hTY29wZUlkKCJkYXRhLXYtMmE4NjFhYzUiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbik7Cgpjb25zdCBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiY2FyZCBjYXJkLWZ1bGwgY2FyZC1ibG9nIgp9Owpjb25zdCBfaG9pc3RlZF8yID0gWyJzcmMiXTsKY29uc3QgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogImJnLWRhcmstdHJhbnNwYXJlbnQgY2FyZC1vdmVybGF5Igp9Owpjb25zdCBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBjYXJkLWF1dGhvciIKfTsKY29uc3QgX2hvaXN0ZWRfNSA9IHsKICBjbGFzczogImZsZXgtc2hyaW5rLTAgYXZhdGFyIGF2YXRhci0yIgp9Owpjb25zdCBfaG9pc3RlZF82ID0gWyJzcmMiXTsKY29uc3QgX2hvaXN0ZWRfNyA9IHsKICBjbGFzczogImZsZXgtZ3Jvdy0xIG1zLTIgdGV4dC13aGl0ZSIKfTsKY29uc3QgX2hvaXN0ZWRfOCA9IHsKICBjbGFzczogImNhcmQtYm9keSBjYXJkLWJvZHktczEiCn07CmNvbnN0IF9ob2lzdGVkXzkgPSB7CiAgY2xhc3M6ICJjYXJkLXRpdGxlIG1iLTMiCn07CmNvbnN0IF9ob2lzdGVkXzEwID0gewogIGNsYXNzOiAiY2FyZC10ZXh0Igp9OwoKY29uc3QgX2hvaXN0ZWRfMTEgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCgpID0+IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJociIsIHsKICBjbGFzczogIm15LTAiCn0sIG51bGwsIC0xKSk7Cgpjb25zdCBfaG9pc3RlZF8xMiA9IHsKICBjbGFzczogImNhcmQtYm9keSBjYXJkLWJvZHktczEgcHktMyIKfTsKY29uc3QgX2hvaXN0ZWRfMTMgPSB7CiAgY2xhc3M6ICJjYXJkLWFjdGlvbi1pbmZvIgp9OwoKY29uc3QgX2hvaXN0ZWRfMTQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCgpID0+IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJlbSIsIHsKICBjbGFzczogIm5pIG5pLWNhbGVuZGVyLWRhdGUgbWUtMSIKfSwgbnVsbCwgLTEpKTsKCmNvbnN0IF9ob2lzdGVkXzE1ID0gewogIGNsYXNzOiAibWUtMyIKfTsKCmNvbnN0IF9ob2lzdGVkXzE2ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgoKSA9PiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZW0iLCB7CiAgY2xhc3M6ICJuaSBuaS1jb21tZW50cyBtZS0xIgp9LCBudWxsLCAtMSkpOwoKY29uc3QgX2hvaXN0ZWRfMTcgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCgpID0+IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJlbSIsIHsKICBjbGFzczogIm5pIG5pLWhlYXJ0IG1lLTEiCn0sIG51bGwsIC0xKSk7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIGNvbnN0IF9jb21wb25lbnRfcm91dGVyX2xpbmsgPSBfcmVzb2x2ZUNvbXBvbmVudCgicm91dGVyLWxpbmsiKTsKCiAgY29uc3QgX2NvbXBvbmVudF9zd2lwZXJfc2xpZGUgPSBfcmVzb2x2ZUNvbXBvbmVudCgic3dpcGVyLXNsaWRlIik7CgogIGNvbnN0IF9jb21wb25lbnRfc3dpcGVyID0gX3Jlc29sdmVDb21wb25lbnQoInN3aXBlciIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9zd2lwZXIsIHsKICAgIG1vZHVsZXM6ICRzZXR1cC5tb2R1bGVzLAogICAgInNsaWRlcy1wZXItdmlldyI6IDMsCiAgICBicmVha3BvaW50czogewogICAgICAwOiB7CiAgICAgICAgc2xpZGVzUGVyVmlldzogMQogICAgICB9LAogICAgICA3Njc6IHsKICAgICAgICBzbGlkZXNQZXJWaWV3OiAyCiAgICAgIH0sCiAgICAgIDk5MjogewogICAgICAgIHNsaWRlc1BlclZpZXc6IDMKICAgICAgfQogICAgfSwKICAgIHBhZ2luYXRpb246IHsKICAgICAgY2xpY2thYmxlOiB0cnVlCiAgICB9CiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEuU2VjdGlvbkRhdGEuYmxvZ0RhdGEuYmxvZ0xpc3QsIGl0ZW0gPT4gewogICAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9zd2lwZXJfc2xpZGUsIHsKICAgICAgICBrZXk6IGl0ZW0uaWQKICAgICAgfSwgewogICAgICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfcm91dGVyX2xpbmssIHsKICAgICAgICAgIHRvOiBpdGVtLmJ0bkxpbmssCiAgICAgICAgICBjbGFzczogImQtYmxvY2sgY2FyZC1pbWFnZSIKICAgICAgICB9LCB7CiAgICAgICAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgICAgICAgICBzcmM6IGl0ZW0uaW1nLAogICAgICAgICAgICBjbGFzczogImNhcmQtaW1nLXRvcCIsCiAgICAgICAgICAgIGFsdDogIiIKICAgICAgICAgIH0sIG51bGwsIDgsIF9ob2lzdGVkXzIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgICAgICAgICAgIHNyYzogaXRlbS5hdmF0YXIsCiAgICAgICAgICAgIGFsdDogIiIsCiAgICAgICAgICAgIGNsYXNzOiAicm91bmRlZC1jaXJjbGUiCiAgICAgICAgICB9LCBudWxsLCA4LCBfaG9pc3RlZF82KV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF83LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoaXRlbS51c2VyTmFtZSksIDEpXSldKV0pXSksCiAgICAgICAgICBfOiAyCiAgICAgICAgfSwgMTAzMiwgWyJ0byJdKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImg0IiwgX2hvaXN0ZWRfOSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X3JvdXRlcl9saW5rLCB7CiAgICAgICAgICB0bzogaXRlbS5idG5MaW5rCiAgICAgICAgfSwgewogICAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoKCkgPT4gW19jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZyhpdGVtLnRpdGxlKSwgMSldKSwKICAgICAgICAgIF86IDIKICAgICAgICB9LCAxMDMyLCBbInRvIl0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBfaG9pc3RlZF8xMCwgX3RvRGlzcGxheVN0cmluZyhpdGVtLmRlc2MpLCAxKV0pLCBfaG9pc3RlZF8xMSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMywgW19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCBudWxsLCBbX2hvaXN0ZWRfMTQsIF9jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZyhpdGVtLmRhdGUpLCAxKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCBfaG9pc3RlZF8xNSwgW19ob2lzdGVkXzE2LCBfY3JlYXRlVGV4dFZOb2RlKF90b0Rpc3BsYXlTdHJpbmcoaXRlbS5udW1iZXJUZXh0KSwgMSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIG51bGwsIFtfaG9pc3RlZF8xNywgX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKGl0ZW0ubnVtYmVyVGV4dFR3byksIDEpXSldKV0pXSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3JvdXRlcl9saW5rLCB7CiAgICAgICAgICBjbGFzczogImRldGFpbHMiLAogICAgICAgICAgdG86IHsKICAgICAgICAgICAgbmFtZTogJ05ld3NEZXRhaWwnLAogICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICBpZDogaXRlbS5pZCwKICAgICAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSwKICAgICAgICAgICAgICBpbWc6IGl0ZW0uaW1nLAogICAgICAgICAgICAgIGF2YXRhcjogaXRlbS5hdmF0YXIsCiAgICAgICAgICAgICAgdXNlck5hbWU6IGl0ZW0udXNlck5hbWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIG51bGwsIDgsIFsidG8iXSldKV0pLAogICAgICAgIF86IDIKICAgICAgfSwgMTAyNCk7CiAgICB9KSwgMTI4KSldKSwKICAgIF86IDEKICB9LCA4LCBbIm1vZHVsZXMiXSk7Cn0="},null]}