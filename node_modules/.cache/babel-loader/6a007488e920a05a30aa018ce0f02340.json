{"remainingRequest":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\babel-loader\\lib\\index.js!E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengaturanSection.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\src\\components\\section\\PengaturanSection.vue","mtime":1660631155059},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\babel.config.js","mtime":1660555071787},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660643185437},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1660643185418},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\babel-loader\\lib\\index.js","mtime":1660643187247},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660643185437},{"path":"E:\\Codeee\\PPLI FE BE\\PPLI\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1660643187621}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwovLyBJbXBvcnQgY29tcG9uZW50IGRhdGEuIFlvdSBjYW4gY2hhbmdlIHRoZSBkYXRhIGluIHRoZSBzdG9yZSB0byByZWZsZWN0IGluIGFsbCBjb21wb25lbnQKaW1wb3J0IFNlY3Rpb25EYXRhIGZyb20gIkAvc3RvcmUvc3RvcmUuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgJCBmcm9tICJqcXVlcnkiOwppbXBvcnQgU3dhbCBmcm9tICJzd2VldGFsZXJ0MiI7CmltcG9ydCBtaXR0IGZyb20gIm1pdHQiOwpjb25zdCBlbWl0dGVyID0gbWl0dCgpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFjY291bnRTZWN0aW9uIiwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIFNlY3Rpb25EYXRhLAogICAgICB1c2VyTWFuYWplbWVuOiBbXSwKICAgICAgaWQ6ICIiLAogICAgICByb2xlczogIiIsCiAgICAgIHJvbGVzc3M6IFtdCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGdldFJvbGVzOiBmdW5jdGlvbiAoKSB7CiAgICAgIGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX1JPT1RfQVBJICsgInJvbGUvc2hvdyIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgdGhpcy5yb2xlc3NzID0gcmVzcG9uc2UuZGF0YS5kYXRhOwogICAgICB9LmJpbmQodGhpcykpOwogICAgfSwKCiAgICBzaG93UG9zdCgpIHsKICAgICAgU3dhbC5maXJlKHsKICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgIGljb246ICJzdWNjZXNzIiwKICAgICAgICB0aXRsZTogIkRhdGEgdGVsYWggdGVyc2ltcGFuISIsCiAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgIHRpbWVyOiAxNTAwCiAgICAgIH0pOwogICAgfSwKCiAgICBzaG93RGVsZXRlKGlkKSB7CiAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgdGl0bGU6ICJBcGFrYWggYW5kYSBpbmdpbiBtZW5naGFwdXMgZGF0YSBpbmk/IiwKICAgICAgICBzaG93RGVueUJ1dHRvbjogdHJ1ZSwKICAgICAgICAvLyBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLAogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAiSXlhIiwKICAgICAgICBkZW55QnV0dG9uVGV4dDogYFRpZGFrYAogICAgICB9KS50aGVuKHJlc3VsdCA9PiB7CiAgICAgICAgLyogUmVhZCBtb3JlIGFib3V0IGlzQ29uZmlybWVkLCBpc0RlbmllZCBiZWxvdyAqLwogICAgICAgIGlmIChyZXN1bHQuaXNDb25maXJtZWQpIHsKICAgICAgICAgIHRoaXMuZGVsZXRlVXNlcihpZCk7CiAgICAgICAgICBTd2FsLmZpcmUoIlRlcnNpbXBhbiEiLCAiIiwgInN1Y2Nlc3MiKTsKICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdC5pc0RlbmllZCkgewogICAgICAgICAgU3dhbC5maXJlKCJUaWRhayBUZXJzaW1wYW4iLCAiIiwgImluZm8iKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICByZXNldG5hbWEoKSB7CiAgICAgIHRoaXMubmFtZSA9IG51bGw7CiAgICB9LAoKICAgIHB1dFVzZXIoaWQpIHsKICAgICAgLy8gYWxlcnQoaWQpOwogICAgICBheGlvcy5wb3N0KHByb2Nlc3MuZW52LlZVRV9BUFBfUk9PVF9BUEkgKyAiYWRtaW4vdXBkYXRlL1VzZXIvIiArIGlkLCB7CiAgICAgICAgcm9sZXM6IHRoaXMucm9sZXMKICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5zaG93UG9zdCgpOwogICAgICAgIHRoaXMuZ2V0VXNlck1hbmFqZW1lbigpOyAvLyB0aGlzLiR0b2FzdC5zaG93KCJiZXJoYXNpbCB1cGRhdGUiKTsKCiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgdGhpcy4kdG9hc3QuZXJyb3IoImdhZ2FsIHVwZGF0ZSIpOwogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICAgIHRoaXMucm9sZXMgPSAiIjsKICAgIH0sCgogICAgdGVzKGlkKSB7CiAgICAgIC8vIGFsZXJ0KGlkKTsKICAgICAgYXhpb3MuZ2V0KHByb2Nlc3MuZW52LlZVRV9BUFBfUk9PVF9BUEkgKyAiYWRtaW4vc2hvdy9yb2xlcy8iICsgaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5yb2xlcykKICAgICAgICB0aGlzLmlkID0gcmVzcG9uc2UuZGF0YS5pZDsKICAgICAgICB0aGlzLnJvbGVzID0gcmVzcG9uc2UuZGF0YS5yb2xlczsgLy8gdGhpcy5pbmk9cmVzcG9uc2UuZGF0YS5yb2xlczsKICAgICAgfS5iaW5kKHRoaXMpKTsKICAgIH0sCgogICAgZ2V0VXNlck1hbmFqZW1lbjogZnVuY3Rpb24gKCkgewogICAgICBheGlvcy5nZXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9ST09UX0FQSSArICJ1c2VyTWFuYWplbWVuIikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB0aGlzLnVzZXJNYW5hamVtZW4gPSByZXNwb25zZS5kYXRhOwogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgJCgiI2RhdGFVc2VyIikuRGF0YVRhYmxlKCk7CiAgICAgICAgfSwgMTAwKTsKICAgICAgfS5iaW5kKHRoaXMpKTsKICAgIH0sCgogICAgZGVsZXRlVXNlcihpZCkgewogICAgICAvLyBhbGVydChpZCk7CiAgICAgIGF4aW9zLmRlbGV0ZShwcm9jZXNzLmVudi5WVUVfQVBQX1JPT1RfQVBJICsgImFkbWluL2RlbGV0ZS9Vc2VyLyIgKyBpZCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gYWxlcnQoImRlbGV0ZSBzdWNjZXMiKTsKICAgICAgICB0aGlzLmdldFVzZXJNYW5hamVtZW4oKTsKICAgICAgfS5iaW5kKHRoaXMpKTsKICAgIH0sCgogICAgY2hlY2tQcml2aWxlZ2UocHJpdmlsZWdlKSB7CiAgICAgIGNvbnN0IHBlcm1pc3Npb24gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgicGVybWlzc2lvbiIpOwogICAgICBsZXQgc3RhdHVzID0gZmFsc2U7CiAgICAgIEpTT04ucGFyc2UocGVybWlzc2lvbikuZm9yRWFjaChkYXRhID0+IHsKICAgICAgICBpZiAoZGF0YSA9PT0gcHJpdmlsZWdlKSB7CiAgICAgICAgICBzdGF0dXMgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBzdGF0dXM7CiAgICB9CgogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgdGhpcy5nZXRSb2xlcygpOwogICAgdGhpcy5nZXRVc2VyTWFuYWplbWVuKCk7CiAgICBlbWl0dGVyLm9uKCJyZWZyZXNoUGFnZSIsICgpID0+IHsKICAgICAgdGhpcy5nZXRVc2VyTWFuYWplbWVuKCk7CiAgICB9KTsKICB9LAoKICBtb3VudGVkKCkgewogICAgLyo9PT09PT09PT09PVNIT1cgVVBMT0FERUQgSU1BR0UgPT09PT09PT09PT09PT09PT09ICovCiAgICBmdW5jdGlvbiB1cGxvYWRJbWFnZShzZWxlY3RvcikgewogICAgICBsZXQgZWxlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpOwoKICAgICAgaWYgKGVsZW0ubGVuZ3RoID4gMCkgewogICAgICAgIGVsZW0uZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoaXRlbS5maWxlcyAmJiBpdGVtLmZpbGVzWzBdKSB7CiAgICAgICAgICAgICAgbGV0IGltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGl0ZW0uZGF0YXNldC50YXJnZXQpOwoKICAgICAgICAgICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChpbWcuc3JjKTsKICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBpbWcuc3JjID0gVVJMLmNyZWF0ZU9iamVjdFVSTChpdGVtLmZpbGVzWzBdKTsKICAgICAgICAgICAgICBsZXQgYWxsb3dlZEV4dGVuc2lvbnMgPSBbImpwZyIsICJKUEVHIiwgIkpQRyIsICJwbmciXTsKICAgICAgICAgICAgICBsZXQgZmlsZUV4dGVuc2lvbiA9IHRoaXMudmFsdWUuc3BsaXQoIi4iKS5wb3AoKTsKICAgICAgICAgICAgICB2YXIgbGFzdERvdCA9IHRoaXMudmFsdWUubGFzdEluZGV4T2YoIi4iKTsKICAgICAgICAgICAgICB2YXIgZXh0ID0gdGhpcy52YWx1ZS5zdWJzdHJpbmcobGFzdERvdCArIDEpOwogICAgICAgICAgICAgIHZhciBleHRUeHQgPSBpbWcudmFsdWUgPSBleHQ7CgogICAgICAgICAgICAgIGlmICghYWxsb3dlZEV4dGVuc2lvbnMuaW5jbHVkZXMoZmlsZUV4dGVuc2lvbikpIHsKICAgICAgICAgICAgICAgIGFsZXJ0KGV4dFR4dCArICIgZmlsZSB0eXBlIG5vdCBhbGxvd2VkLCBQbGVhc2UgdXBsb2FkIGpwZywgSlBHLCBKUEVHLCBvciBwbmcgZmlsZSIpOwogICAgICAgICAgICAgICAgaW1nLnNyYyA9ICIgIjsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CgogICAgdXBsb2FkSW1hZ2UoIi51cGxvYWQtaW1hZ2UiKTsKICAgIC8qID09PT09PT09PT09IFNob3cvSGlkZSBwYXNzb3dvcmQgPT09PT09PT09PT09PT0gKi8KCiAgICBmdW5jdGlvbiBzaG93SGlkZVBhc3N3b3JkKHNlbGVjdG9yKSB7CiAgICAgIGxldCBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7CgogICAgICBpZiAoZWxlbS5sZW5ndGggPiAwKSB7CiAgICAgICAgZWxlbS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgbGV0IHRhcmdldCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGl0ZW0uZ2V0QXR0cmlidXRlKCJocmVmIikpOwoKICAgICAgICAgICAgaWYgKHRhcmdldC50eXBlID09ICJwYXNzd29yZCIpIHsKICAgICAgICAgICAgICB0YXJnZXQudHlwZSA9ICJ0ZXh0IjsKICAgICAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoImlzLXNob3duIik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdGFyZ2V0LnR5cGUgPSAicGFzc3dvcmQiOwogICAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgiaXMtc2hvd24iKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KCiAgICBzaG93SGlkZVBhc3N3b3JkKCIucGFzc3dvcmQtdG9nZ2xlIik7CiAgfQoKfTs="},null]}